http://blog.csdn.net/fightforyourdream/article/details/17707187

public class Solution {
    public boolean isScramble(String s1, String s2) {
        int len = s1.length();
        if(len != s2.length()) {
            return false;
        }
        
        boolean[][][] canScramble = new boolean[len][len][len+1];   // i,j with sublength
        for(int i=0; i<len; i++) {
            for(int j=0; j<len; j++) {
                canScramble[i][j][1] = s1.charAt(i) == s2.charAt(j);    // substring start from i with length 1, compared with substring start from j with length 1
            }
        }
        
        for(int sublen=2; sublen<=len; sublen++) {
            // end_pos = x+(sublen-1) <= len-1, so x <= len-sublen
            for(int i=0; i<=len-sublen; i++) {
                for(int j=0; j<=len-sublen; j++) {
                    for(int p=1; p<sublen; p++) {       // split position
                        canScramble[i][j][sublen] |= (canScramble[i][j][p] && canScramble[i+p][j+p][sublen-p]) || 
                                                     (canScramble[i][j+sublen-p][p] && canScramble[i+p][j][sublen-p]);
                    }
                }
            }
        }
        
        return canScramble[0][0][len];
    }
}
