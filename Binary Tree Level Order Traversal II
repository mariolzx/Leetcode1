/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
public ArrayList<ArrayList<Integer>> levelOrderBottom(TreeNode root) {
    ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
    if(root == null)
        return res;
    LinkedList<TreeNode> queue = new LinkedList<TreeNode>();
    queue.add(root);
    int curNum = 0;
    int lastNum = 1;
    ArrayList<Integer> list = new ArrayList<Integer>();
    while(!queue.isEmpty())
    {
        TreeNode cur = queue.poll();
        lastNum--;
        list.add(cur.val);
        if(cur.left!=null)
        {
            queue.add(cur.left);
            curNum ++;
        }
        if(cur.right!=null)
        {
            queue.add(cur.right);
            curNum++;
        }
        if(lastNum==0)
        {
            lastNum = curNum;
            curNum = 0;
            res.add(0, list);
            list = new ArrayList<Integer>();
        }
    }
    return res;
}

}
