public class Solution {
    
    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0 || grid[0].length == 0)
            return 0;
        int m=0;
        for (int i=0; i<grid.length; i++) 
           for (int j=0; j<grid[0].length; j++) {
               if (grid[i][j]=='1') {
                      DFS(i, j, grid);
                      m++;
               }
           }
        return m;
    }
    
    private void DFS(int i, int j, char[][] grid) {
      if ((i<0)||(j<0)||(i>=grid.length)||(j>=grid[0].length)) return;
      
      if (grid[i][j]=='1') {
        grid[i][j] = '2'; 
        DFS(i+1, j, grid);
        DFS(i-1, j, grid);
        DFS(i, j-1, grid);
        DFS(i, j+1, grid);
      }
      }
    
}
