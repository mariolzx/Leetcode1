public class Solution {
    public int[] twoSum(int[] nums, int target) {
      
    HashMap<Integer, LinkedList<Integer>> hm=new HashMap<Integer, LinkedList<Integer>>();
      for (int i=0; i<nums.length; i++) {
          if (hm.containsKey(nums[i])) {
              LinkedList<Integer> list=hm.get(nums[i]);
              list.add(i);
          }
          else {
              LinkedList<Integer> temp=new LinkedList<Integer>();
              temp.add(i);
              hm.put(nums[i], temp);}
      }
      
      Arrays.sort(nums);
      int[] result=new int[2];
      int i=0;
      int j=nums.length-1;
      while(i<j) {
    	if ((nums[i]+nums[j])<target) {
    		i++;
    	}
    	else if ((nums[i]+nums[j])>target) {
    		j--;
    	}
    	else {
              LinkedList<Integer> temp1=hm.get(nums[i]);
    	      result[0]=temp1.poll().intValue();
                    
    	      LinkedList<Integer> temp2=hm.get(nums[j]);
    	      result[1]=temp2.poll().intValue();
    	      return result;}
      }
       return result;
    }
}
